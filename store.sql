-- MySQL Script generated by MySQL Workbench
-- Mon Sep 13 00:54:41 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema store
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema store
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `store` DEFAULT CHARACTER SET utf8 ;
USE `store` ;

-- -----------------------------------------------------
-- Table `store`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`users` (
  `id` INT(8) NOT NULL,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(125) NOT NULL,
  `phone` BIGINT(10) NULL,
  `password` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`products` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL,
  `updated` DATETIME NOT NULL,
  `sku` VARCHAR(20) NOT NULL,
  `product_type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(255) NULL,
  `price` DOUBLE NOT NULL,
  `status` VARCHAR(10) NOT NULL,
  `quantity_available` INT(8) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `sku_UNIQUE` (`sku` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`orders` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `user_id` INT(8) NOT NULL,
  `created` DATETIME NOT NULL,
  `status` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orders_users_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_orders_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `store`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`payments` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `order_id` INT(8) NOT NULL,
  `user_id` INT(8) NOT NULL,
  `created` DATETIME NOT NULL,
  `price` DOUBLE NOT NULL,
  `status` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_payments_orders1_idx` (`order_id` ASC) VISIBLE,
  INDEX `fk_payments_users1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_payments_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `store`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_payments_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `store`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`payment_methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`payment_methods` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `payment_id` INT(8) NOT NULL,
  `price` DOUBLE NOT NULL,
  `method_type` VARCHAR(45) NOT NULL,
  `name` VARCHAR(125) NULL,
  `card_number` VARCHAR(45) NULL,
  `cvc` INT(6) NULL,
  `expiration_month` INT(2) NULL,
  `expiration_year` INT(4) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_payment_methods_payments1_idx` (`payment_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_methods_payments1`
    FOREIGN KEY (`payment_id`)
    REFERENCES `store`.`payments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`stocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`stocks` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `created` DATETIME NOT NULL,
  `status` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`products_in_orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`products_in_orders` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `product_id` INT(8) NOT NULL,
  `order_id` INT(8) NOT NULL,
  `created` DATETIME NOT NULL,
  `quantity` INT(8) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_products_has_orders_orders1_idx` (`order_id` ASC) VISIBLE,
  INDEX `fk_products_has_orders_products1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_has_orders_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `store`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_orders_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `store`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `store`.`products_in_stocks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `store`.`products_in_stocks` (
  `id` INT(8) NOT NULL AUTO_INCREMENT,
  `products_id` INT(8) NOT NULL,
  `stocks_id` INT(8) NOT NULL,
  `quantity` INT(8) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_products_has_stocks_stocks1_idx` (`stocks_id` ASC) VISIBLE,
  INDEX `fk_products_has_stocks_products1_idx` (`products_id` ASC) VISIBLE,
  CONSTRAINT `fk_products_has_stocks_products1`
    FOREIGN KEY (`products_id`)
    REFERENCES `store`.`products` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_stocks_stocks1`
    FOREIGN KEY (`stocks_id`)
    REFERENCES `store`.`stocks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
